{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Flight Delay Prediction - Documentation","text":""},{"location":"#overview","title":"Overview","text":"<p>This project implements a machine learning pipeline for predicting flight delays using AWS SageMaker.</p> <p>The script <code>data_pipeline_npn.py</code>: - Loads flight &amp; airport data from S3 - Cleans and preprocesses data - Trains a RandomForest classifier - Saves model (<code>model.pkl</code>) for backend - Logs accuracy (<code>latest.txt</code>) to S3</p>"},{"location":"#expected-input-data","title":"Expected Input Data","text":""},{"location":"#flightscsv","title":"flights.csv","text":"<ul> <li>YEAR: Year of flight (int)</li> <li>MONTH: Month (1\u201312)</li> <li>DAY: Day of month (1\u201331)</li> <li>DAY_OF_WEEK: 1 = Monday, \u2026, 7 = Sunday</li> <li>AIRLINE: Airline code (string, e.g., \"AA\", \"UA\")</li> <li>FLIGHT_NUMBER: Flight number (int)</li> <li>TAIL_NUMBER: Aircraft identifier (string)</li> <li>ORIGIN_AIRPORT, DESTINATION_AIRPORT: 3-letter codes</li> <li>SCHEDULED_DEPARTURE, ARRIVAL_TIME, etc. (HHMM format \u2192 converted to minutes)</li> <li>ARRIVAL_DELAY: Target variable (minutes; later converted into binary class)</li> </ul>"},{"location":"#airportscsv","title":"airports.csv","text":"<ul> <li>IATA_CODE: 3-letter code</li> <li>CITY, STATE: Location metadata</li> <li>LATITUDE, LONGITUDE: Coordinates</li> </ul>"},{"location":"#pipeline-steps","title":"Pipeline Steps","text":"<ol> <li>Data loading from S3</li> <li>Cleaning irrelevant columns</li> <li>Time feature engineering (HHMM \u2192 minutes since midnight)</li> <li>Encoding categorical features</li> <li>Train/test split</li> <li>Missing value imputation (KNN &amp; median)</li> <li>Scaling (Robust + Standard)</li> <li>Model training (RandomForestClassifier)</li> <li>Outputs:</li> <li><code>/opt/ml/model/model.pkl</code> (inside SageMaker model.tar.gz)</li> <li><code>s3://model-npn/latest.txt</code> (accuracy log)</li> </ol>"},{"location":"deployment/","title":"Deployment","text":""},{"location":"deployment/#overview","title":"Overview","text":"<p>This document explains the architecture and deployment workflow of the Flight Delay Prediction System. The system integrates AWS S3, Amazon ECS, Docker Hub, GitHub, and external data sources such as the Aviation Stack API. It supports continuous integration (CI) and continuous delivery (CD), ensuring reliable retraining and deployment of ML models.</p>"},{"location":"deployment/#architecture-components","title":"Architecture Components","text":""},{"location":"deployment/#1-s3-buckets","title":"1. S3 Buckets","text":"<ul> <li>S3: MODELS</li> <li>Central storage for all models.</li> <li> <p>Contains:</p> <ul> <li>S3: PROD \u2192 Latest live model version currently serving predictions.</li> <li>S3: STAGING \u2192 Latest trained model pending evaluation.</li> <li>Latest.txt \u2192 Keeps track of the key for the latest live model, useful for rollbacks.</li> </ul> </li> <li> <p>S3: DATA</p> </li> <li>Stores datasets used for training and evaluation.</li> <li>Sub-buckets:<ul> <li>S3: TRAINING DATA \u2192 Historical training datasets used for model training.</li> <li>S3: NEW DATA \u2192 Fresh data fetched daily from the Aviation Stack API. This is used for model evaluation and accuracy measurement.</li> </ul> </li> </ul>"},{"location":"deployment/#2-model-training","title":"2. Model Training","text":"<ul> <li>Google Colab / SageMaker (Training Environment)</li> <li>Fetches training data from S3: TRAINING DATA using boto3.</li> <li>Performs:<ul> <li>Data preprocessing and cleaning.</li> <li>Model training (Random Forest, Logistic Regression, etc.).</li> <li>Model testing and evaluation.</li> </ul> </li> <li>After training:<ul> <li>Model is pushed to S3: STAGING.</li> <li>Evaluation metrics (accuracy, F1-score) are logged.</li> </ul> </li> </ul>"},{"location":"deployment/#3-backend-deployment","title":"3. Backend Deployment","text":"<ul> <li>Amazon ECS (Elastic Container Service)</li> <li>Hosts backend services (APIs) inside Docker containers.</li> <li>ECS loads the latest backend Docker image from Docker Hub and serves it via a public URL.</li> <li> <p>Backend API integrates with S3 to fetch the latest model version and serve real-time predictions.</p> </li> <li> <p>Docker Hub</p> </li> <li>Stores multiple versions of backend Docker images.</li> <li>Every backend update (after code push) is dockerized and uploaded here.</li> </ul>"},{"location":"deployment/#4-version-control-and-cicd","title":"4. Version Control and CI/CD","text":"<ul> <li>GitHub</li> <li>Developers push code into their branches.</li> <li> <p>CI/CD pipeline triggers:</p> <ul> <li>Backend and frontend code validation.</li> <li>Dockerization of updated code.</li> <li>Upload of new Docker image to Docker Hub.</li> <li>ECS automatically fetches updated image for deployment.</li> </ul> </li> <li> <p>Backend Code Responsibilities</p> </li> <li>Model Loader \u2192 Loads latest model from S3 (using key in <code>latest.txt</code>).</li> <li>Daily Data Fetcher \u2192 Fetches new data daily via Aviation Stack API and pushes it to S3: NEW DATA.</li> <li>Evaluator \u2192 Runs model tests on S3: NEW DATA.  <ul> <li>If accuracy &gt; threshold \u2192 promotes model from STAGING to PROD and updates <code>latest.txt</code>.</li> <li>If accuracy &lt; threshold \u2192 rejects promotion, PROD remains unchanged.</li> </ul> </li> </ul>"},{"location":"deployment/#5-external-api","title":"5. External API","text":"<ul> <li>Aviation Stack API</li> <li>Provides fresh daily flight data.</li> <li>Integrated in backend service to:<ul> <li>Fetch daily data.</li> <li>Update S3: NEW DATA for accuracy measurement.</li> </ul> </li> </ul>"},{"location":"deployment/#workflow-summary","title":"Workflow Summary","text":"<ol> <li>Training data stored in S3: TRAINING DATA is used to train models in Colab/SageMaker.  </li> <li>Trained models are uploaded to S3: STAGING.  </li> <li>Backend fetches daily flight data via Aviation Stack API and saves it to S3: NEW DATA.  </li> <li>Model in STAGING is tested on NEW DATA.  </li> <li>If accuracy \u2265 threshold \u2192 promoted to PROD, <code>latest.txt</code> updated.  </li> <li>If not \u2192 rejected.  </li> <li>Backend hosted on ECS always loads the PROD model key from latest.txt and serves predictions.  </li> <li>Developer code updates go to GitHub, triggering Docker builds \u2192 Docker Hub \u2192 ECS deployment.  </li> </ol>"},{"location":"deployment/#key-benefits","title":"Key Benefits","text":"<ul> <li>Rollback Capability \u2192 <code>latest.txt</code> ensures quick switch to a stable model.  </li> <li>Scalable Design \u2192 Data on S3, compute via ECS, training via SageMaker/Colab.  </li> <li>Automated CI/CD \u2192 Code and models continuously updated without manual intervention.  </li> <li>Clear Separation \u2192 Training, staging, and production environments isolated for safety. \"\"\"</li> </ul>"}]}